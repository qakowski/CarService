@page "/"
@using SerwisSamochodowy.Services
@using SerwisSamochodowy.Data
@inject GetCars carsService
@inject NavigationManager NavigationManager
<style>
    .tableRowAsLink {
        cursor: pointer;
    }

    .tableRowAsLink:hover {
            filter: brightness(50%);
            transition: 0.5s;
    }

</style>
<div style="width:100%;height:50%;">
    <div id="logo" style="width:100%; height:350px;"><img src="logo.png" style="width:30%;height:100%;margin-right:35%;margin-left:35%;"/></div>
    <div id="Utilities" style="width:100%;height:15%;">
        <div id="menu" style="width:20%;float:left;height:100%;">
            <div style="margin-left:30%;margin-right:30%;margin-top:10%;">
                <NavLink class="btn btn-primary" href="addCar">
                    <span class="oi oi-list-plus" aria-hidden="true"></span> Dodaj samochod
                </NavLink>
            </div>
        </div>
        <div id="filters" style="width:80%;height:100%;float:left;">
            <EditForm Model="@filter" OnValidSubmit="HandleValidSubmit">
                <table style="width:100%;">
                    <tr>
                        <td >
                            <label>Nazwisko: </label>
                            <InputText style="width:75%" class="form-control" @bind-Value="@filter.ClientName" />
                        </td>
                        <td>
                            <label>Producent: </label>
                            <InputText style="width:75%" class="form-control" @bind-Value="@filter.Producer" />
                        </td>
                        <td rowspan="2">
                            <button class="btn btn-primary px-2" type="submit">Szukaj</button>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>Model: </label>
                            <InputText style="width:75%" class="form-control" @bind-Value="@filter.Model" />
                        </td>

                        <td>
                            <label>Numer zgłoszenia</label>
                            <InputText style="width:75%" class="form-control" @bind-Value="@filter.CallId" />
                        </td>

                    </tr>
                </table>
            </EditForm>
        </div>
    </div>
</div>

@if (cars != null && cars.Count() != 0)
{
    <table class="table" style="margin-top:2%;">
        <thead>
            <tr>
                <th scope="col">Producent</th>
                <th scope="col">Model</th>
                <th scope="col">Nazwisko klienta</th>
                <th scope="col">Numer zgłoszenia</th>
                <th scope="col">Opis usterki</th>
                <th scope="col">Stan</th>
                <th scope="col">Zdjecie</th>
                <th scope="col">Data przyjecia</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var (car, index) in cars.Select((v, i) => (v, i)))
            {

                var uri = $"car/{car.Id.ToString()}";

                var className = index % 2 == 0 ? "dark" : "light";
                <tr class="table-@className tableRowAsLink" @onclick="@(e => MoveToPage(uri))">
                    <td>@car.Producer</td>
                    <td>@car.Model</td>
                    <td>@car.Client.SureName @car.Client.ForeName</td>
                    <td>@car.Id</td>
                    <td>@car.Description</td>
                    @switch (car.State)
                    {
                        case StateEnum.Przyjety:
                            <td style="color:gray">@car.State</td>
                            break;
                        case StateEnum.Naprawa:
                            <td style="color:bisque">@car.State</td>
                            break;
                        case StateEnum.Naprawiony:
                            <td style="color:lawngreen">@car.State</td>
                            break;
                        default:
                            <td>@car.State</td>
                            break;
                    }
                    <td style="width:30%;height:100%;"><img style="width:50%; height:100px; margin-left:20%;margin-right:20%;" src="@car.Photo" /></td>
                    <td>@car.Received</td>
                </tr>
                }
            </tbody>
    </table>
}
else
{
    <h1 style="margin-top:2%;">Aktualnie nie ma zadnego samochodu na stanie serwisu</h1>
}


@code
{
    private GetCarsCommand filter = new Commands.GetCarsCommand(string.Empty, string.Empty, string.Empty, string.Empty);
    private IEnumerable<Data.Car> cars;

    protected override async Task OnInitializedAsync()
    {
        await HandleValidSubmit();
    }

    private async Task HandleValidSubmit()
    {
        cars = await carsService.Handle(filter);
    }

    private void MoveToPage(string uri)
    {
        NavigationManager.NavigateTo(uri);
    }
}