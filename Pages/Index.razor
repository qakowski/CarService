@page "/"
@using SerwisSamochodowy.Services
@using SerwisSamochodowy.Data
@inject GetCars carsService
<div>
    <div id="logo"></div>
    <div id="Utilities">
        <div id="menu">

        </div>
        <div id="filters">
            <EditForm Model="@filter" OnValidSubmit="HandleValidSubmit">
                <label>Nazwisko: </label><InputText @bind-Value="@filter.ClientName"/>
                <label>Producent: </label><InputText @bind-Value="@filter.Producer"/>
                <label>Model: </label><InputText @bind-Value="@filter.Model"/>
                <label>Numer zgłoszenia</label><InputText @bind-Value="@filter.CallId"/>
                <button type="submit">Szukaj</button>
            </EditForm>
        </div>
    </div>
</div>

@if (cars != null && cars.Count() != 0)
{
<table>
    <thead>
    <th>Producent</th>
    <th>Model</th>
    <th>Nazwisko klienta</th>
    <th>Numer zgłoszenia</th>
    <th>Opis usterki</th>
    <th>Stan</th>
    <th>Zdjecie</th>
    <th>Data przyjecia</th>
    </thead>
    @foreach (var car in cars)
    {
        
        <a class="nav-link" href="car/@car.Id.ToString()">
            <tr>
                <td>@car.Producer</td>
                <td>@car.Model</td>
                <td>@car.Client.SureName @car.Client.ForeName</td>
                <td>@car.Id</td>
                <td>@car.Description</td>
                @switch (car.State)
                {
                    case StateEnum.Przyjety:
                        <td style="color:gray">@car.State</td>
                        break;
                    case StateEnum.Naprawa:
                        <td style="color:bisque">@car.State</td>
                        break;
                    case StateEnum.Naprawiony:
                        <td style="color:lawngreen">@car.State</td>
                        break;
                    default:
                        <td>@car.State</td>
                        break;
                }
                <td><img style="width:200px;height:100px" src="data:image/gif;base64,@car.Photo" /></td>
                <td>@car.Received</td>

            </tr></a>
        }
</table>
}
else
{
    <h1>Aktualnie nie ma zadnego samochodu na stanie serwisu</h1>
}


@code
{
    private GetCarsCommand filter = new Commands.GetCarsCommand(string.Empty, string.Empty, string.Empty, string.Empty);
    private IEnumerable<Data.Car> cars;

    protected override async Task OnInitializedAsync()
    {
        HandleValidSubmit();
    }

    private async void HandleValidSubmit()
    {
        cars = await carsService.Handle(filter);
    }
}